openapi: 3.0.3
info:
  title: TonyStar E-commerce backend API
  description: The API provides management functions for the online store.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Dev server
paths:
  /products:
    get:
      tags:
        - product-controller
      operationId: getProductByCategory
      parameters:
        - name: category
          in: query
          required: false
          schema:
            maxLength: 36
            minLength: 0
            type: string
            default: ''
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/:id:
    get:
      tags:
        - product-controller
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 0
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /orders:
    get:
      tags:
        - order-controller
      operationId: getOrderByCustomer
      parameters:
        - name: id
          in: query
          required: false
          schema:
            maxLength: 36
            minLength: 0
            type: string
            default: ''
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /orders/:id:
    get:
      tags:
        - order-controller
      operationId: getOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 0
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /customers:
    get:
      tags:
        - customer-controller
      operationId: getCustomerByEmail
      parameters:
        - name: email
          in: query
          required: false
          schema:
            maxLength: 36
            minLength: 0
            type: string
            default: ''
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/:id:
    get:
      tags:
        - customer-controller
      operationId: getCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 0
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    Product:
      required:
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
          enum:
            - BOOKS
            - MUSIC
            - TOYS
        quantity:
          type: integer
          format: int32
          example: 10
        price:
          type: integer
          format: int32
          example: 3000
    Customer:
      required:
        - address
        - creditCard
        - firstName
        - lastName
        - phone
      type: object
      properties:
        id:
          type: string
        firstName:
          maxLength: 50
          minLength: 2
          pattern: \w
          type: string
        lastName:
          maxLength: 50
          minLength: 2
          pattern: \w
          type: string
        email:
          type: string
          example: electroautomatic@gmail.com
        phone:
          type: string
          example: 89120479100
        address:
          $ref: '#/components/schemas/Address'
    MonetaryAmount:
      type: object
      properties:
        amount:
          type: number
          example: 99.96
        currency:
          type: string
          pattern: (USD|CAD|EUR|AUD)
          example: USD
    Order:
      required:
        - customerId
        - description
        - items
        - status
      type: object
      properties:
        id:
          type: string
        description:
          maxLength: 80
          minLength: 2
          type: string
        status:
          type: string
          enum:
            - PENDING
            - READY
            - SHIPPED
        customerId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        amount:
          $ref: '#/components/schemas/MonetaryAmount'
    OrderItem:
      required:
        - name
      type: object
      properties:
        id:
          type: string
        name:
          maxLength: 50
          minLength: 2
          type: string
        productId:
          type: string
        quantity:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/MonetaryAmount'
        amount:
          $ref: '#/components/schemas/MonetaryAmount'
    Address:
      required:
        - city
        - streetAddress
        - zipCode
      type: object
      properties:
        id:
          type: string
        streetAddress:
          maxLength: 70
          minLength: 2
          pattern: \w+
          type: string
        city:
          maxLength: 60
          minLength: 2
          type: string
        zipCode:
          maxLength: 12
          minLength: 2
          pattern: \d{5}
          type: string
        countryCode:
          type: string
          enum:
            - US
            - CA
  
