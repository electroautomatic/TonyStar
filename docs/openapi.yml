openapi: 3.0.0
info:
  title: Online Store API
  version: 1.0
  description: API for an Online Store Information System

paths:
  /company/clients:
    get:
      summary: Get a list of company clients
      responses:
        200:
          description: A list of company clients

  /company/clients/{clientId}:
    get:
      summary: Get company client by ID
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Company client
    put:
      summary: Update company client by ID
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdate'

  /company/clients/{clientId}/addresses:
    get:
      summary: Get client addresses
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of client addresses
    post:
      summary: Add a new client address
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientAddress'

  /company/clients/{clientId}/password:
    put:
      summary: Change client password
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'

  /company/clients/{clientId}/orders:
    get:
      summary: Get order history for company clients
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of orders
    post:
      summary: Place a new order
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'

  /company/employees/orders:
    get:
      summary: Get orders for company employees
      responses:
        200:
          description: List of orders
    patch:
      summary: Update order status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChange'

  /company/employees/sales-statistics:
    get:
      summary: Get sales statistics
      responses:
        200:
          description: Sales statistics

  /company/employees/goods:
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goods'

  /cart:
    get:
      summary: Get the contents of the shopping cart
      responses:
        200:
          description: Shopping cart contents
    post:
      summary: Add items to the shopping cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
  /catalog:
    get:
      summary: Browse the catalog with the ability to filter by parameters
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter by category
        - in: query
          name: brand
          schema:
            type: string
          description: Filter by brand
        - in: query
          name: color
          schema:
            type: string
          description: Filter by color
        
      responses:
        200:
          description: List of catalog items

components:
  schemas:
    ClientUpdate:
      type: object
      properties:
        Name:
          type: string
        Surname:
          type: string
        DateOfBirth:
          type: string
          format: date
        Email:
          type: string

    ClientAddress:
      type: object
      properties:
        Country:
          type: string
        City:
          type: string
        PostalCode:
          type: string
        Street:
          type: string
        Home:
          type: string
        Apartment:
          type: string

    PasswordChange:
      type: object
      properties:
        Password:
          type: string

    OrderRequest:
      type: object
      properties:
        Goods:
          type: array
          items:
            type: object
            properties:
              GoodsID:
                type: integer
              Quantity:
                type: integer

    OrderStatusChange:
      type: object
      properties:
        OrderStatus:
          type: string

    Goods:
      type: object
      properties:
        Title:
          type: string
        Price:
          type: number
        Category:
          type: string
        Brand:
          type: string
        Color:
          type: string
        Weight:
          type: number
        Volume:
          type: number
        QuantityInStock:
          type: integer

    CartItem:
      type: object
      properties:
        GoodsID:
          type: integer
        Quantity:
          type: integer
